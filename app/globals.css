@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --color-bg1: rgb(25, 22, 27);
  --color-bg2: rgb(2, 3, 9);
  --color1: 18, 113, 255;
  --color2: 221, 74, 255;
  --color3: 100, 220, 255;
  --color4: 200, 50, 50;
  --color5: 180, 180, 50;
  --color-interactive: 140, 100, 255;
  --circle-size1: 80%;
  --circle-size2: 30%;
  --blending: hard-light;
  --shine-transition: all 0.5s ease-in-out;
  --shine-effect: linear-gradient(
          120deg,
          transparent,
          rgba(255, 255, 255, 0.2),
          transparent
  );
}

@keyframes moveInCircle {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes moveVertical {
  0% {
    transform: translateY(-50%);
  }
  50% {
    transform: translateY(50%);
  }
  100% {
    transform: translateY(-50%);
  }
}
@keyframes moveHorizontal {
  0% {
    transform: translateX(-50%) translateY(-50%);
  }
  50% {
    transform: translateX(50%) translateY(50%);
  }
  100% {
    transform: translateX(-50%) translateY(-50%);
  }
}

h2 {
  font-size: 1.5rem;
  font-weight: 600;
}

.gradient-bg {
  width: 100%;
  height: 100%;
  position: absolute;
  overflow: hidden;
  background: linear-gradient(50deg, var(--color-bg1) 0%, var(--color-bg2));
  top: 0;
  left: 0;
}

svg {
  display: none;
}

.gradients-container {
  filter: url(#goo) blur(40px);
  width: 100%;
  height: 100%;
}

.g1 {
  position: absolute;
  background: radial-gradient(circle at center, rgba(229, 219, 255, 0.8) 0, rgba(var(--color1), 0) 50%) no-repeat;
  mix-blend-mode: var(--blending);
  width: var(--circle-size1);
  height: var(--circle-size1);
  top: calc(50% - var(--circle-size1) / 2);
  left: calc(50% - var(--circle-size1) / 2);
  opacity: 1;
  transform-origin: center center;
  animation: moveVertical 30s ease infinite;
}
.g2 {
  position: absolute;
  background: radial-gradient(circle at center, rgb(73 73 73 / 80%) 0, rgba(var(--color2), 0) 50%) no-repeat;
  mix-blend-mode: var(--blending);
  width: var(--circle-size1);
  height: var(--circle-size1);
  top: calc(50% - var(--circle-size1) / 2);
  left: calc(50% - var(--circle-size1) / 2);
  opacity: 1;
  transform-origin: calc(50% - 400px);
  animation: moveInCircle 20s reverse infinite;
}

.g3 {
  position: absolute;
  background: radial-gradient(circle at center, rgba(var(--color5), 0.8) 0, rgba(var(--color5), 0) 50%) no-repeat;
  mix-blend-mode: var(--blending);
  width: var(--circle-size1);
  height: var(--circle-size1);
  top: calc(50% - var(--circle-size1));
  left: calc(50% - var(--circle-size1));
  opacity: 1;
  transform-origin: calc(50% - 800px) calc(50% + 200px);
  animation: moveInCircle 20s ease infinite;
}

.g4 {
  position: absolute;
  background: radial-gradient(circle at center, rgba(var(--color-interactive), 0.8) 0, rgba(var(--color-interactive), 0) 50%) no-repeat;
  mix-blend-mode: var(--blending);
  height: var(--circle-size1);
  width: var(--circle-size1);
  top: calc(50% - var(--circle-size1));
  left: calc(50% - var(--circle-size1));
  opacity: 0.5;
  transform-origin: 80% calc(50% + 400px);
  animation: moveHorizontal 40s linear infinite;
}


.interactive {
  position: absolute;
  background: radial-gradient(circle at center, rgba(var(--color-interactive), 0.8) 0, rgba(var(--color-interactive), 0) 50%) no-repeat;
  mix-blend-mode: var(--blending);
  width: 100%;
  height: 100%;
  top: -50%;
  left: -50%;
  opacity: 0.7;
}

body {
  font-family: Arial, Helvetica, sans-serif;
}

@layer utilities {
  .btn-hover {
      position: relative;
      overflow: hidden;

    &:not(:last-child) {
      margin-bottom: 3rem;
    }

      &::before {
        content: "";
        position: absolute;
        top: 0;
        width: 100%;
        height: 100%;
        background: var(--shine-effect);
      }

    &::before {
      left: -100%;
      transition: var(--shine-transition);
    }
    &:hover {
      &::before {
        left: 100%;
      }
    }
  }
  .text-stroke {
    text-shadow:
            -0.2px -0.2px 0 #272727,
            0.2px -0.2px 0 #272727,
            -0.2px 0.2px 0 #272727,
            0.2px 0.2px 0 #272727;
    color: white;
  }
}

.icon-link {
  display: block;
  width: 18px;
  height: 18px;
  background-size: cover; /* 이미지 크기를 요소 크기에 맞게 조절 */
  background-image: url("/link.svg");
}

.icon-github {
  display: block;
  width: 20px;
  height: 20px;
  background-size: cover; /* 이미지 크기를 요소 크기에 맞게 조절 */
  background-image: url("/github-brands.svg");
}
.icon-linkedin {
  display: block;
  width: 20px;
  height: 20px;
  background-size: cover; /* 이미지 크기를 요소 크기에 맞게 조절 */
  background-image: url("/linkedin.svg");
}
.arrow-back {
  display: block;
  width: 18px;
  height: 18px;
  background-size: cover; /* 이미지 크기를 요소 크기에 맞게 조절 */
  background-image: url("/arrow-left-solid.svg");
}


.article-list > li {
  border-top: 2px solid #94a3b8;
  border-bottom: 2px solid #94a3b8;
}

/* 첫 번째 div의 위쪽은 유지하고, 이후 div들의 위쪽은 제거 */
.article-list > li + li {
  border-top: none;
}

/* articles
 */

@media (max-width: 767px) {
  .article {
    font-size: 0.875rem; /* 14px */
  }
}

@media (min-width: 768px) {
  .article {
    font-size: 1rem; /* 16px */
  }
}

/* Table 스타일: 셀 간의 border가 겹치지 않도록 설정 */
table {
  border-collapse: separate; /* 각 셀의 테두리가 독립적으로 표시됨 */
  border-spacing: 0;           /* 셀 사이 간격 0 */
  width: 100%;
}

table th,
table td {
  border: 1px solid #666; /* 검은 배경에 대비되는 밝은 회색 테두리 */
  padding: 8px;
}

/* Code block 스타일: 옅은 그레이 배경 및 읽기 쉬운 텍스트 색상 */
.blog pre {
  background-color: #080808; /* 옅은 그레이(다크 그레이) 배경 */
  color: #f8f8f2;           /* 밝은 텍스트 색상 */
  padding: 1rem;
  border-radius: 4px;
  overflow-x: auto;
  margin: 1rem 0;
}

code {
  background-color: #080808;
  color: #f8f8f2;
  padding: 0.2rem 0.4rem;
  border-radius: 3px;
}
